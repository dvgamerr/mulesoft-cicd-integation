name: Mulesoft Package

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ORGANIZATION_ID: ${{ secrets.ORGANIZATION_ID }}
    steps:

    - name: Verify Client Credentials
      run: |
        curl -Lfsi -X POST https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token -H 'Content-Type: application/json' \
        -d '{"grant_type":"client_credentials","client_id":"${{ env.CLIENT_ID }}","client_secret":"${{ env.CLIENT_SECRET }}"}'

    - name: Checkout scdp-cicd-integation
      uses: actions/checkout@v3

    - name: Checkout mulesoft-scgp-api
      uses: actions/checkout@v3
      with:
        repository: dvgamerr/scgp-mule-domain
        path: ./mule-domain
        ref: main

    - name: Convert pom.xml to json
      uses: fabasoad/data-format-converter-action@main

    - name: Print result
      run: |
        yq -P './pom.xml' -p=xml -o=json > pom.json
        cat pom.json | jq '.project.dependencies.dependency | select(.id == "${{ env.ORGANIZATION_ID }}")'

    # - name: Setup jdk8
    #   uses: actions/setup-java@v3
    #   with:
    #     distribution: 'temurin'
    #     java-version: '8'

    # - uses: actions/cache@v1
    #   with:
    #     path: ~/.m2/repository
    #     key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: |
    #       ${{ runner.os }}-maven-

    # - name: Build mule-domain
    #   run: |
    #     cd ./mule-domain
    #     mvn clean package install -f pom.xml

    # - name: Build scdp-cicd-integation
    #   run: |
    #     mvn clean package -f pom.xml -s settings.xml

    # - name: artifact scdp-cicd-integation
    #   if: github.ref_name != "main"
    #   run: |
    #     repo_name=${GITHUB_REPOSITORY#*/}#${{ github.run_number }}-${{ github.ref_name }}-build.${{ github.run_id }}
    #     mv $(ls ./target/*.jar) ./target/$repo_name.jar
    #     ls -al ./target/*.jar
    #     echo "REPO_NAME=$repo_name" >> $GITHUB_ENV

    # - name: Deploy package
    #   if: github.ref_name != "main"
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ${{ env.REPO_NAME }}.jar
    #     path: ./target/${{ env.REPO_NAME }}.jar
