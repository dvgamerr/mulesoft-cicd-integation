name: Mulesoft Package

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ORGANIZATION_ID: ${{ secrets.ORGANIZATION_ID }}
      ENVIRONMENT: Sandbox
      APP_ID: scgp-cicd-integation

    steps:

    - name: Verify Client Credentials
      run: |
        curl -Lfsi -X POST https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token -H 'Content-Type: application/json' \
        -d '{"grant_type":"client_credentials","client_id":"${{ env.CLIENT_ID }}","client_secret":"${{ env.CLIENT_SECRET }}"}'

    - name: Checkout scdp-cicd-integation
      uses: actions/checkout@v3

    - name: Checkout mulesoft-scgp-api
      uses: actions/checkout@v3
      with:
        repository: dvgamerr/scgp-mule-domain
        path: ./mule-domain
        ref: main

    - name: Convert pom.xml to json
      uses: fabasoad/data-format-converter-action@main
      id: convert
      with:
        input: ./pom.xml
        from: xml
        to: json
    - name: Fixed data-format-converter-action write to pom.josn
      run: echo '${{ steps.convert.outputs.output }}' > pom.json
      shell: sh
        
    - name: Print Result
      run: cat pom.json 
      
    - name: Get API Version in dependency
      run: |
        version=$(cat pom.json | jq '.project.dependencies.dependency | select(.groupId == "${{ env.ORGANIZATION_ID }}") | .version')
        echo "API_VERSION=$version" >> $GITHUB_ENV

    - name: Install anypoint-cli-v4 and Config
      run: |
        npm i -g anypoint-cli-v4
        anypoint-cli-v4 conf client_id ${{ env.CLIENT_ID }}
        anypoint-cli-v4 conf client_secret ${{ env.CLIENT_SECRET }}
        anypoint-cli-v4 conf organization ${{ env.ORGANIZATION_ID }}
        anypoint-cli-v4 conf environment ${{ env.ENVIRONMENT }}

    - name: Setup jdk8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build mule-domain
      run: |
        cd ./mule-domain
        mvn clean package install -f pom.xml

    - name: Build scdp-cicd-integation
      run: |
        mvn clean package -f pom.xml -s settings.xml

    - name: artifact scdp-cicd-integation
      # if: github.ref_name != "main"
      run: |
        repo_name=${GITHUB_REPOSITORY#*/}#${{ github.run_number }}-${{ github.ref_name }}-build.${{ github.run_id }}
        mv $(ls ./target/*.jar) ./target/$repo_name.jar
        ls -al ./target/*.jar
        echo "REPO_NAME=$repo_name" >> $GITHUB_ENV

    - name: Deploy package
      # if: github.ref_name != "main"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.REPO_NAME }}
        path: ./target/${{ env.REPO_NAME }}.jar

    - name: Deploy Aticatct to CouldAppilication
      # if: github.ref_name != "main"
      run: |
        echo anypoint-cli-v4 runtime-mgr:cloudhub-application:modify \
        ${{ env.APP_ID }} /target/${{ env.REPO_NAME }}.jar -o json
